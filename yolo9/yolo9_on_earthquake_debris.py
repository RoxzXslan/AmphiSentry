# -*- coding: utf-8 -*-
"""YOLO9 on Earthquake Debris.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FNpb6RDnNORkdTH5VFWbvPhmPUix4BGz

## Before you start

Let's make sure that we have access to GPU. We can use `nvidia-smi` command to do that. In case of any problems navigate to `Edit` -> `Notebook settings` -> `Hardware accelerator`, set it to `GPU`, and then click `Save`.
"""

!nvidia-smi

"""**NOTE:** To make it easier for us to manage datasets, images and models we create a `HOME` constant."""

import os
HOME = os.getcwd()
print(HOME)

"""## Clone and Install

**NOTE:** YOLOv9 is very new. At the moment, we recommend using a fork of the main repository. The `detect.py` script contains a bug that prevents inference. This bug is patched in the fork.
"""

# Commented out IPython magic to ensure Python compatibility.
!git clone https://github.com/SkalskiP/yolov9.git
# %cd yolov9
!pip install -r requirements.txt -q

"""**NOTE:** Let's install additional packages that will be useful later on."""

!pip install -q roboflow

"""## Imports"""

import roboflow

from IPython.display import Image

"""## Download model weights

**NOTE:** In the YOLOv9 paper, versions yolov9-s and yolov9-m are also mentioned, but the weights for these models are not yet available in the YOLOv9 repository.
"""

!mkdir -p {HOME}/weights

!wget -P {HOME}/weights -q https://github.com/WongKinYiu/yolov9/releases/download/v0.1/yolov9-c.pt
!wget -P {HOME}/weights -q https://github.com/WongKinYiu/yolov9/releases/download/v0.1/yolov9-e.pt
!wget -P {HOME}/weights -q https://github.com/WongKinYiu/yolov9/releases/download/v0.1/gelan-c.pt
!wget -P {HOME}/weights -q https://github.com/WongKinYiu/yolov9/releases/download/v0.1/gelan-e.pt

!ls -la {HOME}/weights

"""## Download example data"""

!mkdir -p {HOME}/data

SOURCE_IMAGE_PATH = "/content/earthquake.jpg"

"""## Detection with pre-trained COCO model

### gelan-c
"""

!python detect.py --weights {HOME}/yolov9/runs/train/exp2/weights/best.pt --conf 0.1 --source "/content/Earthquake In Turkey and Syria Death Toll Rises Above 11,200.mp4" --device 0

"""**NOTE:** By default, the results of each subsequent inference sessions are saved in `{HOME}/yolov9/runs/detect/`, in directories named `exp`, `exp2`, `exp3`, ... You can override this behavior by using the `--name` parameter."""

Image(filename=f"{HOME}/yolov9/runs/detect/exp4/", width=600)

"""## yolov9-e"""

!python detect.py --weights {HOME}/weights/yolov9-e.pt --conf 0.1 --source /content/yolov9/Screenshot_70.png --device 0

Image(filename=f"{HOME}/yolov9/runs/detect/exp2/dog.jpeg", width=600)

"""## Authenticate and Download the Dataset

**NOTE:** The dataset must be saved inside the `{HOME}/yolov9` directory, otherwise, the training will not succeed.
"""

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}/yolov9


from roboflow import Roboflow
rf = Roboflow(api_key="BNBBykksz8sNQQbpyK24")
project = rf.workspace("rmit-oeng1090-master-research-thesis").project("post-earthquake-exterior-environment")
version = project.version(1)
dataset = version.download("yolov9")

"""## Train Custom Model"""

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}/yolov9

!python train.py \
--batch 8 --epochs 10 --img 640 --device 0 --min-items 0 --close-mosaic 15 \
--data {dataset.location}/data.yaml \
--weights {HOME}/weights/gelan-c.pt \
--cfg models/detect/gelan-c.yaml \
--hyp hyp.scratch-high.yaml

"""## Examine Training Results

**NOTE:** By default, the results of each subsequent training sessions are saved in `{HOME}/yolov9/runs/train/`, in directories named `exp`, `exp2`, `exp3`, ... You can override this behavior by using the `--name` parameter.
"""

!ls {HOME}/yolov9/runs/train/exp/

Image(filename=f"{HOME}/yolov9/runs/train/exp2/results.png", width=1000)

Image(filename=f"{HOME}/yolov9/runs/train/exp2/confusion_matrix.png", width=1000)

Image(filename=f"{HOME}/yolov9/runs/train/exp2/val_batch0_pred.jpg", width=1000)

"""## Validate Custom Model"""

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}/yolov9

!python val.py \
--img 640 --batch 8 --conf 0.001 --iou 0.7 --device 0 \
--data {dataset.location}/data.yaml \
--weights {HOME}/yolov9/runs/train/exp2/weights/best.pt

"""## Inference with Custom Model"""

!python detect.py \
--img 640 --conf 0.1 --device 0 \
--weights {HOME}/yolov9/runs/train/exp2/weights/best.pt \
--source {dataset.location}/valid/images

import glob
from IPython.display import Image, display

for image_path in glob.glob(f'{HOME}/yolov9/runs/detect/exp/*.jpg')[:3]:
      display(Image(filename=image_path, width=600))
      print("\n")

!pip install ultralytics

from ultralytics import YOLO

model= YOLO("/content/yolov9/runs/train/exp2/weights/best.pt")

results = model.predict(source="0", show=True)

print(results)